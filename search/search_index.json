{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs Tutorial A guide for using MkDocs with GitHub Pages. For full documentation visit mkdocs.org and github pages . Package Install All the contents of this website are edited with markdown format. The markdown files are then converted to static html pages via Mkdocs package. These commands will install the python dependencies onto a python environment. It is recommended that an anaconda or miniconda environment is used to easily edit markdown files using a code editor. pip install mkdocs pip install pymdown-extensions Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs gh-deploy - Deploys on GitHub Pages. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. Create GitHub Pages Create new repo Create on Github Then use GitHub Desktop or Terminal git clone url in desired folder Initial Commit cd useful_code mkdocs new . echo 'theme: readthedocs' >> mkdocs.yml mkdocs serve preview on http://127.0.0.1:8000 Adding Content Copy and paste all useful code and text files into the repository folder. Use README.md file as a brief introduction to the project. Don't forget to branch or fork a repository if collaborating. Deploying on GitHub Pages echo 'site/' >>.gitignore git add . git commit -a -m 'first commit' git push origin master mkdocs gh-deploy This should take a few minutes before the website is available. Check https://kj2431.github.io/useful_code/ If not available, then do the following: Delete gh-pages branch Make sure github pages source is none in the repo settings Update mkdocs to latest version Use mkdocs gh-deploy command once again In a few minutes check if website exists; if not, delete repo and try again. Tutorial for editing content Contribute Content Write your contents in markdown format and save them in /docs folder, with file extention .md Organize Pages Specify your content in mkdocs.yml , section nav as follows: site_name: SITE_NAME theme: readthedocs TOPIC: - todo I: todo_I.md - todo II: todo_II.md in which TOPIC will be top level folder, and todo I and todo II will be the second level pages Raise Pull Request After the content editting is finished, remember to raise pull request for content merging especially if this is collaborative work. Markdown Format Specification https://guides.github.com/features/mastering-markdown/ Updating webpage Organize all markdown files within the docs folder. Edit website navigation map by editing the nav section in mkdocs.yml as shown above. Verify rendering effect: On your desktop computer, navigate to the root folder of this repo, type mkdocs serve in command line; this will start a website server locally on 127.0.0.1:8000 . Check to make sure the HTML page is rendered properly, and there are no formatting issues. Please note that when embedding an outside HTML file onto the markdown page, it must also follow HTTPS standards. Officially publish to Github pages Type mkdocs gh-deploy in command line.","title":"Home"},{"location":"#welcome-to-mkdocs-tutorial","text":"","title":"Welcome to MkDocs Tutorial"},{"location":"#a-guide-for-using-mkdocs-with-github-pages","text":"For full documentation visit mkdocs.org and github pages .","title":"A guide for using MkDocs with GitHub Pages."},{"location":"#package-install","text":"All the contents of this website are edited with markdown format. The markdown files are then converted to static html pages via Mkdocs package. These commands will install the python dependencies onto a python environment. It is recommended that an anaconda or miniconda environment is used to easily edit markdown files using a code editor. pip install mkdocs pip install pymdown-extensions","title":"Package Install"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs gh-deploy - Deploys on GitHub Pages. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"#create-github-pages","text":"","title":"Create GitHub Pages"},{"location":"#create-new-repo","text":"Create on Github Then use GitHub Desktop or Terminal git clone url in desired folder","title":"Create new repo"},{"location":"#initial-commit","text":"cd useful_code mkdocs new . echo 'theme: readthedocs' >> mkdocs.yml mkdocs serve preview on http://127.0.0.1:8000","title":"Initial Commit"},{"location":"#adding-content","text":"Copy and paste all useful code and text files into the repository folder. Use README.md file as a brief introduction to the project. Don't forget to branch or fork a repository if collaborating.","title":"Adding Content"},{"location":"#deploying-on-github-pages","text":"echo 'site/' >>.gitignore git add . git commit -a -m 'first commit' git push origin master mkdocs gh-deploy This should take a few minutes before the website is available. Check https://kj2431.github.io/useful_code/ If not available, then do the following: Delete gh-pages branch Make sure github pages source is none in the repo settings Update mkdocs to latest version Use mkdocs gh-deploy command once again In a few minutes check if website exists; if not, delete repo and try again.","title":"Deploying on GitHub Pages"},{"location":"#tutorial-for-editing-content","text":"","title":"Tutorial for editing content"},{"location":"#contribute-content","text":"Write your contents in markdown format and save them in /docs folder, with file extention .md","title":"Contribute Content"},{"location":"#organize-pages","text":"Specify your content in mkdocs.yml , section nav as follows: site_name: SITE_NAME theme: readthedocs TOPIC: - todo I: todo_I.md - todo II: todo_II.md in which TOPIC will be top level folder, and todo I and todo II will be the second level pages","title":"Organize Pages"},{"location":"#raise-pull-request","text":"After the content editting is finished, remember to raise pull request for content merging especially if this is collaborative work.","title":"Raise Pull Request"},{"location":"#markdown-format-specification","text":"https://guides.github.com/features/mastering-markdown/","title":"Markdown Format Specification"},{"location":"#updating-webpage","text":"Organize all markdown files within the docs folder. Edit website navigation map by editing the nav section in mkdocs.yml as shown above. Verify rendering effect: On your desktop computer, navigate to the root folder of this repo, type mkdocs serve in command line; this will start a website server locally on 127.0.0.1:8000 . Check to make sure the HTML page is rendered properly, and there are no formatting issues. Please note that when embedding an outside HTML file onto the markdown page, it must also follow HTTPS standards. Officially publish to Github pages Type mkdocs gh-deploy in command line.","title":"Updating webpage"},{"location":"downloads/","text":"Useful Downloads: DrugBank Open Data Tensorflow image","title":"Downloads"},{"location":"downloads/#useful-downloads","text":"DrugBank Open Data Tensorflow image","title":"Useful Downloads:"},{"location":"pullrequest/","text":"Tutorial for pull requests This page shows how to submit a pull request for collaborative works between multiple people. Submit a Github Pull Request Most public projects can be forked. For example, everyone is welcome to fork this Github Project . If you would like to contribute your own discoveries related to COVID-19, please feel free to perform the following steps: Create a customized markdown file to publish your contributions or edits. Edit the mkdocs.yml file and put your markdown file in an appropriate section. Submit your Pull Request and we will process your effort as soon as possible. The brief tutorial below shows how to fork and make a pull request: 1) Fork the Targeting2019-nCov repository 2) Edit content 3) Create pull request 4) Submit pull request","title":"Github Tutorial"},{"location":"pullrequest/#tutorial-for-pull-requests","text":"This page shows how to submit a pull request for collaborative works between multiple people.","title":"Tutorial for pull requests"},{"location":"pullrequest/#submit-a-github-pull-request","text":"Most public projects can be forked. For example, everyone is welcome to fork this Github Project . If you would like to contribute your own discoveries related to COVID-19, please feel free to perform the following steps: Create a customized markdown file to publish your contributions or edits. Edit the mkdocs.yml file and put your markdown file in an appropriate section. Submit your Pull Request and we will process your effort as soon as possible. The brief tutorial below shows how to fork and make a pull request: 1) Fork the Targeting2019-nCov repository 2) Edit content 3) Create pull request 4) Submit pull request","title":"Submit a Github Pull Request"}]}